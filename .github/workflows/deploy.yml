name: Deploy to AWS EC2

on:
  push:
    branches:
      - master
      
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Install Docker Compose (if required)
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -r ./backend/ ec2-user@54.208.64.57:/home/ec2-user/deployment/
    
    
    - name: Generate .env Files on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key.pem ec2-user@54.208.64.57 << 'EOF'
  

        echo "${{ secrets.USER_SERVICE_ENV }}" > /home/ec2-user/deployment/backend/user-service/.env
        echo "${{ secrets.POST_SERVICE_ENV }}" > /home/ec2-user/deployment/backend/post-service/.env
        EOF

    - name: Generate Init Scripts on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key.pem ec2-user@54.208.64.57 << 'EOF'
        mkdir -p /home/ec2-user/deployment/backend/init-mysql
        mkdir -p /home/ec2-user/deployment/backend/init-mongodb
        echo "${{ secrets.INIT_MYSQL_SCRIPT }}" > /home/ec2-user/deployment/backend/init-mysql/init.sql
        echo "${{ secrets.INIT_MONGO_SCRIPT }}" > /home/ec2-user/deployment/backend/init-mongodb/init-mongo.js
        EOF


    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@54.208.64.57 << 'EOF'
        cd /home/ec2-user/deployment/backend
        docker-compose down -v
        docker-compose up --build -d
        EOF
